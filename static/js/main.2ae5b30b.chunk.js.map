{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","div","FeedbackOptions","options","onLeaveFeedback","map","key","type","name","onClick","Section","title","children","Notification","message","App","state","handleClick","event","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAwBeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,KAAG,EAAR,UACE,wCACS,+BAAOL,OAEhB,2CACY,+BAAOC,OAEnB,uCACQ,+BAAOC,OAEf,wCACS,+BAAOC,SAEhB,qDACsB,+BAAOC,MAD7B,YCDSE,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBAAkBC,KAAK,SAASC,KAAMF,EAAKG,QAASL,EAApD,SACGE,GADUA,SCIRI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCAQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,8BAAMA,KC2DAC,E,4MAvDbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,YAAc,SAACC,GACb,IAAQV,EAASU,EAAMC,cAAfX,KACR,EAAKY,UAAS,SAACC,GACb,OAAO,eACJb,EAAOa,EAAUb,GAAQ,O,EAKhCc,mBAAqB,WACnB,OAAO,EAAKN,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAG3DyB,gCAAkC,WAChC,OAAI,EAAKD,qBAAuB,EACtB,EAAKN,MAAMpB,KAAO,EAAK0B,qBAAwB,IAElD,G,4CAGT,WACE,MAA+BE,KAAKR,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASsB,OAAOC,KAAKF,KAAKR,OAC1BZ,gBAAiBoB,KAAKP,gBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGa,KAAKF,qBAAuB,EAC3B,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKF,mBACZtB,mBAAoBwB,KAAKD,kCAG3B,cAAC,EAAD,CAAcT,QAAQ,+B,GAhDhBa,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ae5b30b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div div>\n      <p>\n        Good : <span>{good}</span>\n      </p>\n      <p>\n        Neutral : <span>{neutral}</span>\n      </p>\n      <p>\n        Bad : <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total()}</span>\n      </p>\n      <p>\n        Positive Feedback : <span>{positivePercentage()}</span> %\n      </p>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map((key) => {\n        return (\n          <button key={key} type=\"button\" name={key} onClick={onLeaveFeedback}>\n            {key}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (event) => {\n    const { name } = event.currentTarget;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() > 0) {\n      return (this.state.good / this.countTotalFeedback()) * 100;\n    }\n    return 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}